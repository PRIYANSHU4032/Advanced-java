package com.shivam;

public class test {
	
	public static void revArray(int arr[]) {
		if(arr.length == 1) {
			System.out.println("only one element in array");
		}
		int start = 0;
		int last = arr.length-1;
		while(start < last) {
			int temp = arr[start];
			arr[start] = arr[last];
			arr[last] = temp;
			
			start++;
			last--;
		}
	}
	
	
	public static int occerArray(int arr[],int key) {
		for(int i=0;i<arr.length;i++) {
			if(arr[i] == key) {
				return i;	
			}
			
	}
		return -1;
	}
	
	public static int lastOccur(int arr[],int key) {
		for(int i = arr.length-1;i>0;i--) {
			if(arr[i] == key) {
				return i;
			}
		}
		return -1;
	}
	
	public static 	String revString(String str) {
		char char1 [] = str.toCharArray();
		int start =0;
		int last = char1.length-1;
		while(start<last) {
			char temp = char1[start];
			char1[start] = char1[last];
			char1[last] = temp;
			
			start++;
			last--;
		}
		String str1 = String.valueOf(char1);
		return str1;
		
	}
	
	public static int dubArray(int arr[]) {
		for(int i=0;i<arr.length-1;i++) {
			for(int j=i+1;j<arr.length;j++) {
				if(arr[i] == arr[j]) {
					return arr[i];
				}
			}
		}
		return -1;
	}
	
	public static String subStr(String str,int si,int ei) {
		String strr = "";
		for(int i=si;i<ei;i++) {
			strr = strr+str.charAt(i);
		}
		return strr;
	}
	
	
	public static String findLargest(String[] str) {
	    String largest = str[0]; // Initialize with the first element
	    
	    for (int i = 1; i <=str.length-1; i++) { // Start from the second element
	        if (largest.compareToIgnoreCase(str[i]) >0) {
	            largest = str[i]; // Update if found a larger string
	        }
	    }
	    
	    return largest;
	}

	
	
	
	
	public static void main(String args[]) {
		int arr[] = {5,9,8,4,6,7,4,2,3  };
		//for(int i=0;i<arr.length;i++) {
		//	System.out.println(arr[i]);
		//}
		String name[] = {"priyanshu","simran","nipu","dipendra"};
				
		
		System.out.println(occerArray(arr,4));
		System.out.println(lastOccur(arr,4));
		String str = "priyanshu";
		System.out.println(revString(str));
		System.out.println(dubArray(arr));
		System.out.println(subStr(str,2,4));
		System.out.println(findLargest(name));
		
		
		//revArray(arr);
		//for(int i=0;i<arr.length;i++) {
		//	System.out.println(arr[i]);
		//}
		
	}

}
